(this["webpackJsonpmemory-card-game"]=this["webpackJsonpmemory-card-game"]||[]).push([[0],{30:function(e){e.exports=JSON.parse('[{"id":1,"cardIcon":"coffee","isFlipped":false},{"id":2,"cardIcon":"coffee","isFlipped":false},{"id":3,"cardIcon":"air-freshener","isFlipped":false},{"id":4,"cardIcon":"air-freshener","isFlipped":false},{"id":5,"cardIcon":"cookie","isFlipped":false},{"id":6,"cardIcon":"cookie","isFlipped":false},{"id":7,"cardIcon":"credit-card","isFlipped":false},{"id":8,"cardIcon":"credit-card","isFlipped":false},{"id":9,"cardIcon":"carrot","isFlipped":false},{"id":10,"cardIcon":"carrot","isFlipped":false},{"id":11,"cardIcon":"coins","isFlipped":false},{"id":12,"cardIcon":"coins","isFlipped":false},{"id":13,"cardIcon":"ambulance","isFlipped":false},{"id":14,"cardIcon":"ambulance","isFlipped":false},{"id":15,"cardIcon":"baby","isFlipped":false},{"id":16,"cardIcon":"baby","isFlipped":false}]')},37:function(e,a,i){},45:function(e,a,i){},46:function(e,a,i){"use strict";i.r(a);var s=i(2),r=i(0),t=i.n(r),c=i(18),d=i.n(c),n=i(13),l=i(14),p=i(17),o=i(16),u=i(20),f=i(5),h=(i(37),i(12)),b=i(27),m=i(6),j=i.n(m),v=function(e){Object(p.a)(i,e);var a=Object(o.a)(i);function i(){var e;Object(n.a)(this,i);for(var s=arguments.length,r=new Array(s),t=0;t<s;t++)r[t]=arguments[t];return(e=a.call.apply(a,[this].concat(r))).state={id:null,isFlipped:!1},e.handleClick=function(){if(!e.props.hasBeenMatched)if(e.props.handleClick)e.props.handleClick(e.props.id,e.props.shouldBeFlippable);else{if(!e.props.shouldBeFlippable)return;e.setState((function(e){return e.isFlipped=!e.isFlipped,Object(h.a)({},e)}));var a=document.getElementById(String(e.props.id));a&&(a.classList.contains("flipped")?a.classList.remove("flipped"):a.classList.add("flipped"))}},e}return Object(l.a)(i,[{key:"render",value:function(){var e;if(this.props.isGameCard)this.props.isFlipped&&this.props.cardIcon&&(e=Object(s.jsx)("div",{className:"card-div",children:Object(s.jsx)(b.a,{className:j()("card-icon"),icon:this.props.cardIcon})}));else if(this.state.isFlipped)e=Object(s.jsx)("div",{className:"card-text back card-active",children:this.props.backText});else{var a=j()("card-text front",this.props.frontClassName);e=Object(s.jsx)("div",{className:a,children:this.props.frontText})}return Object(s.jsx)("div",{id:String(this.props.id),onClick:this.handleClick,className:j()(this.props.cardClassName),children:e})}}]),i}(r.Component);v.defaultProps={id:null,cardClassName:null,frontText:null,backText:null,shouldBeFlippable:!0,frontClassName:null,isGameCard:!1,cardIcon:void 0,checkFlippedCards:void 0,handleClick:void 0,isFlipped:!1,hasBeenMatched:!1};var O=v,F=function(){return Object(s.jsxs)("div",{className:"card-container",children:[Object(s.jsx)("p",{className:"info",children:"Click the P to get started!"}),Object(s.jsx)(O,{id:1,cardClassName:"card left",shouldBeFlippable:!0,isFlipped:!1,frontText:"F",backText:"A Memory Card Game"},1),Object(s.jsx)(O,{id:2,cardClassName:"card left",frontClassName:"card-active",shouldBeFlippable:!1,isFlipped:!1,frontText:"L",backText:"This is a Memory Card Game"},2),Object(s.jsx)(O,{id:3,cardClassName:"card",shouldBeFlippable:!0,isFlipped:!1,frontText:"I",backText:Object(s.jsxs)("div",{className:"instructions",children:[Object(s.jsx)("h2",{children:"Instructions"}),Object(s.jsx)("p",{children:"This is a timed card memory game. Click the green cards to see what symbol they uncover and try to find the matching symbol underneath the other cards."})]})},3),Object(s.jsx)(O,{id:4,cardClassName:"card",shouldBeFlippable:!0,isFlipped:!1,frontText:"P",backText:Object(s.jsx)("div",{className:"playgame",children:Object(s.jsx)(u.b,{className:"play",to:"/new-game",children:"Play"})})},4)]})},x=(i(45),i(31)),g=i(25),C=i(30),k=function(e){Object(p.a)(i,e);var a=Object(o.a)(i);function i(e){var s;return Object(n.a)(this,i),(s=a.call(this,e)).state={flippableSquares:[],flippedSquares:[],progressBarValue:0},s.handleClick=function(e,a){a&&(s.setState((function(a){var i=a.flippableSquares,r=a.flippedSquares,t=i.find((function(a){return a.id===e}));if(t)return t.isFlipped=!t.isFlipped,s.flipCard(t.id,t),t.isFlipped&&r.push(t.id),Object(h.a)(Object(h.a)({},a),{},{flippableSquares:i,flippedSquares:r})})),setTimeout((function(){s.handleFlippedCards()}),1337))},s.handleFlippedCards=function(){s.setState((function(e){var a=e.flippableSquares,i=e.flippedSquares;if(i.length>2)s.checkFlippableSquares(e);else{var r=a.find((function(e){return e.id===i[0]})),t=a.find((function(e){return e.id===i[1]}));if(!r||!t)return;r.cardIcon===t.cardIcon?(r.hasBeenMatched=!0,t.hasBeenMatched=!0):s.checkFlippableSquares(e)}return i.length=0,Object(h.a)(Object(h.a)({},e),{},{flippableSquares:a,flippedSquares:i})}))},s.checkFlippableSquares=function(e){var a=e.flippableSquares;e.flippedSquares.forEach((function(e){var i=a.find((function(a){return a.id===e}));i.isFlipped=!i.isFlipped,s.flipCard(i.id,i)}))},s.flipCard=function(e,a){if(!a.hasBeenMatched){var i=document.getElementById(String(e));i&&(i.classList.contains("flipped")?i.classList.remove("flipped"):i.classList.add("flipped"))}},s.state={flippableSquares:C,flippedSquares:[],progressBarValue:0},s}return Object(l.a)(i,[{key:"componentDidMount",value:function(){var e=this;setInterval((function(){return e.updateProgressBar()}),1e3)}},{key:"updateProgressBar",value:function(){this.setState((function(e){var a=e.progressBarValue;if(a>=100){var i=document.getElementById("game-over");i&&i.classList.remove("game-over-display"),e.flippableSquares=[]}else a=e.progressBarValue+5;return{progressBarValue:a}}))}},{key:"render",value:function(){var e=this;if(this.state.flippableSquares){var a=this.state.flippableSquares.map((function(a){return Object(s.jsx)(O,{id:a.id,cardClassName:"card-new-game",cardIcon:a.cardIcon,shouldBeFlippable:!0,isGameCard:!0,isFlipped:a.isFlipped,handleClick:e.handleClick,hasBeenMatched:a.hasBeenMatched},a.id)}));return Object(s.jsxs)("div",{className:"card-container-new-game",children:[Object(s.jsxs)(g.a,{id:"game-over",className:"game-over game-over-display",variant:"danger",children:[Object(s.jsx)(g.a.Heading,{children:"Game Over"}),Object(s.jsxs)("p",{className:"mb-0",children:[Object(s.jsx)("br",{}),"You did not complete the game within the given time period. Please try again, by refreshing. :)"]})]}),Object(s.jsx)(x.a,{className:"progressbar",variant:"warning",now:this.state.progressBarValue}),a]})}}}]),i}(r.Component),y=function(){return Object(s.jsx)(k,{})},I=i(8),S=i(11);I.b.add(S.e),I.b.add(S.a),I.b.add(S.c),I.b.add(S.b),I.b.add(S.f),I.b.add(S.d),I.b.add(S.h),I.b.add(S.g);var B=function(e){Object(p.a)(i,e);var a=Object(o.a)(i);function i(){return Object(n.a)(this,i),a.apply(this,arguments)}return Object(l.a)(i,[{key:"render",value:function(){return Object(s.jsx)("div",{children:Object(s.jsx)(u.a,{basename:"/Memory-Card-Game",children:Object(s.jsxs)(f.c,{children:[Object(s.jsx)(f.a,{exact:!0,path:"/",component:F}),Object(s.jsx)(f.a,{exact:!0,path:"/new-game",component:y})]})})})}}]),i}(t.a.Component);d.a.render(Object(s.jsx)(B,{}),document.getElementById("root"))}},[[46,1,2]]]);
//# sourceMappingURL=main.57a85bf1.chunk.js.map